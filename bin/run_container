#!/usr/bin/env bash

set -x -e

container_parm=${1:-cpubash}  #cpubash | cpujpynb | mklbash | mkljpynb | gpubash | gpujpynb
project_dir=${PWD}

case ${container_parm} in
    cpubash) image=ludwig_tf_cpu
            interactive='-it'
            ports='-p 6006:6006'
            other_run_parms="--user ec2-user:ec2-user"
            cmd=/bin/bash;;

    cpujpynb) image=ludwig_tf_cpu
             interactive='--detach'
             ports='-p 8888:8888 -p 6006:6006'
             other_run_parms="--user ec2-user:ec2-user"
             cmd="jupyter notebook --no-browser --ip 0.0.0.0 \
                --allow-root --password='' --NotebookApp.token='' \
                 --notebook-dir=/opt/project";;

    mklbash) image=ludwig_tf_mkl
            interactive='-it'
            ports='-p 6006:6006'
            other_run_parms=" --user ec2-user:ec2-user"
            cmd=/bin/bash;;

    mkljpynb) image=ludwig_tf_mkl
             interactive='--detach'
             ports='-p 8888:8888 -p 6006:6006'
             other_run_parms="--user ec2-user:ec2-user"
             cmd="jupyter notebook --no-browser --ip 0.0.0.0 \
                --allow-root --password='' --NotebookApp.token='' \
                 --notebook-dir=/opt/project";;

   gpubash) image=ludwig_tf_gpu
            interactive='-it'
            ports='-p 6006:6006'
            other_run_parms=" --user ec2-user:ec2-user"
            cmd=/bin/bash;;

    gpujpynb) image=ludwig_tf_gpu
             interactive='--detach'
             ports='-p 8888:8888 -p 6006:6006'
             other_run_parms="--user ec2-user:ec2-user"
             cmd="jupyter notebook --no-browser --ip 0.0.0.0 \
                --allow-root --password='' --NotebookApp.token='' \
                 --notebook-dir=/opt/project";;
esac


docker run ${interactive} --rm \
    -v ${project_dir}:/opt/project \
    ${ports} \
    ${other_run_parms} \
    --hostname ${container_parm} \
    --name ${container_parm} \
    ${image} \
    ${cmd}